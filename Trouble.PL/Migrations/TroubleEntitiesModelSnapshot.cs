// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trouble.PL.Data;

#nullable disable

namespace Trouble.PL.Migrations
{
    [DbContext(typeof(TroubleEntities))]
    partial class TroubleEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trouble.PL.Entities.tblGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TurnNum")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblGame_Id");

                    b.ToTable("tblGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            GameDate = new DateTime(2024, 2, 21, 16, 31, 2, 582, DateTimeKind.Local).AddTicks(9146),
                            GameName = "Game1",
                            TurnNum = 0
                        },
                        new
                        {
                            Id = new Guid("e29b528a-9562-4a16-b17a-669a3a943b83"),
                            GameDate = new DateTime(2024, 2, 21, 16, 31, 2, 582, DateTimeKind.Local).AddTicks(9189),
                            GameName = "Game2",
                            TurnNum = 0
                        });
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblPiece", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.HasKey("Id")
                        .HasName("PK_tblPiece_Id");

                    b.ToTable("tblPiece", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c5aa89a-096b-4710-aa93-3b85d75450e1"),
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("ab205627-b31f-4d45-8eea-490d652bc59f"),
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("f5732f9c-4ebd-4ad0-97a4-0febca893068"),
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("b06811e8-0bac-4ced-9cf0-38ba3223371e"),
                            Color = "Red"
                        },
                        new
                        {
                            Id = new Guid("8669cfce-a9aa-4d6a-bc6d-85d0e159e168"),
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("b99a984a-96a7-422f-9c23-530c669a11cd"),
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("283b8fb8-a808-4910-8cde-03e37a8106a3"),
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("61967ec8-786f-4658-8052-d84f2c98a9be"),
                            Color = "Blue"
                        },
                        new
                        {
                            Id = new Guid("b9c3d624-46d6-44a9-82d7-53f288b612e6"),
                            Color = "Green"
                        },
                        new
                        {
                            Id = new Guid("eed9b721-9bdc-4143-bd5a-cfb15b57ae94"),
                            Color = "Green"
                        },
                        new
                        {
                            Id = new Guid("fbfd5327-b1f9-4bc2-987e-f1c2e4827b69"),
                            Color = "Green"
                        },
                        new
                        {
                            Id = new Guid("80685a4f-303c-412c-b959-7cfd785a266b"),
                            Color = "Green"
                        },
                        new
                        {
                            Id = new Guid("f7af0a28-f5e4-4360-b909-4d5769396ef6"),
                            Color = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("6bf50076-784a-4b1a-b64e-7990a44ebbcb"),
                            Color = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("68998b85-54ad-47db-91c0-8232038859d1"),
                            Color = "Yellow"
                        },
                        new
                        {
                            Id = new Guid("807dd5bf-b423-4804-862c-446caa9854d7"),
                            Color = "Yellow"
                        });
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblPieceGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PieceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PieceLocation")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblPieceGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PieceId");

                    b.ToTable("tblPieceGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("28af336a-c88b-47ef-9484-fbb1d2fa6f17"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("2c5aa89a-096b-4710-aa93-3b85d75450e1"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("014105d7-3d41-4f05-8d2c-d2613db5f969"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("ab205627-b31f-4d45-8eea-490d652bc59f"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("3e2be232-4e85-44a8-874f-38c69961b169"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("f5732f9c-4ebd-4ad0-97a4-0febca893068"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("897d54f7-baf7-447f-bd77-83f9c372e92b"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("b06811e8-0bac-4ced-9cf0-38ba3223371e"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("b853f5a6-2b88-4138-a745-6122c5ea6f73"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("8669cfce-a9aa-4d6a-bc6d-85d0e159e168"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("a7c6d160-2cc4-4564-9ae5-0a29d51ac0eb"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("b99a984a-96a7-422f-9c23-530c669a11cd"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("7ed43aaa-4807-487d-9034-9abf2a25d8a1"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("283b8fb8-a808-4910-8cde-03e37a8106a3"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("7da056fa-b7cc-4960-95b9-e347e4c1454f"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("61967ec8-786f-4658-8052-d84f2c98a9be"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("3e17b9a4-2c44-4d38-8f83-4c83025ef456"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("b9c3d624-46d6-44a9-82d7-53f288b612e6"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("e4482f83-52d7-4f16-8892-f17e300e4455"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("eed9b721-9bdc-4143-bd5a-cfb15b57ae94"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("f240439b-a0d1-4e5e-bdb2-e12c50f06703"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("fbfd5327-b1f9-4bc2-987e-f1c2e4827b69"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("bfbc81b9-bc40-42a4-a1c3-7a8991fb9128"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("80685a4f-303c-412c-b959-7cfd785a266b"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("688ad089-f2d1-4d41-9485-a497d0d95dff"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("f7af0a28-f5e4-4360-b909-4d5769396ef6"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("430b51ff-5db1-429a-8584-07b27f4ba3eb"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("6bf50076-784a-4b1a-b64e-7990a44ebbcb"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("3a9be791-7898-4d32-8da5-d34022ae00c7"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("68998b85-54ad-47db-91c0-8232038859d1"),
                            PieceLocation = 0
                        },
                        new
                        {
                            Id = new Guid("cd6af0b0-0b13-411f-9ffc-b91b04c09c33"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            PieceId = new Guid("807dd5bf-b423-4804-862c-446caa9854d7"),
                            PieceLocation = 0
                        });
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d1a26ed-c3d1-4174-9ee8-96b8faa9f5f6"),
                            FirstName = "Bob",
                            LastName = "Bob",
                            Password = "ZAqyuuB77cTBY/Z5p0b3q3+10fo=",
                            Username = "User1"
                        },
                        new
                        {
                            Id = new Guid("c2ad14c8-4895-4e5d-a80b-de387f89bc61"),
                            FirstName = "Joe",
                            LastName = "Joe",
                            Password = "ZAqyuuB77cTBY/Z5p0b3q3+10fo=",
                            Username = "User2"
                        },
                        new
                        {
                            Id = new Guid("372ebf81-af39-4807-a42d-adb7f79f18fd"),
                            FirstName = "Susan",
                            LastName = "Susan",
                            Password = "ZAqyuuB77cTBY/Z5p0b3q3+10fo=",
                            Username = "User3"
                        },
                        new
                        {
                            Id = new Guid("daa51d07-86f5-43f9-9640-97b2995fd72a"),
                            FirstName = "Sally",
                            LastName = "Sally",
                            Password = "ZAqyuuB77cTBY/Z5p0b3q3+10fo=",
                            Username = "User4"
                        });
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblUserGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblUserGame_Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("tblUserGame", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("232ce084-972d-4af9-ba37-cad887afb825"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            UserId = new Guid("3d1a26ed-c3d1-4174-9ee8-96b8faa9f5f6")
                        },
                        new
                        {
                            Id = new Guid("62279864-1d34-4734-a2de-be865dd7b02a"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            UserId = new Guid("c2ad14c8-4895-4e5d-a80b-de387f89bc61")
                        },
                        new
                        {
                            Id = new Guid("0c52e982-20a1-44f1-b459-a03796b5fe2d"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            UserId = new Guid("372ebf81-af39-4807-a42d-adb7f79f18fd")
                        },
                        new
                        {
                            Id = new Guid("f7b46b42-0ae9-40f3-bac4-1c7d2ce868dc"),
                            GameId = new Guid("0d663fbd-3e5e-41fd-95aa-ad04500f8ec0"),
                            UserId = new Guid("daa51d07-86f5-43f9-9640-97b2995fd72a")
                        });
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblPieceGame", b =>
                {
                    b.HasOne("Trouble.PL.Entities.tblGame", "Game")
                        .WithMany("tblPieceGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblPieceGame_GameId");

                    b.HasOne("Trouble.PL.Entities.tblPiece", "Piece")
                        .WithMany("tblPieceGames")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblPieceGame_PieceId");

                    b.Navigation("Game");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblUserGame", b =>
                {
                    b.HasOne("Trouble.PL.Entities.tblGame", "Game")
                        .WithMany("tblUserGames")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_GameId");

                    b.HasOne("Trouble.PL.Entities.tblUser", "User")
                        .WithMany("tblUserGames")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("fk_tblUserGame_UserId");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblGame", b =>
                {
                    b.Navigation("tblPieceGames");

                    b.Navigation("tblUserGames");
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblPiece", b =>
                {
                    b.Navigation("tblPieceGames");
                });

            modelBuilder.Entity("Trouble.PL.Entities.tblUser", b =>
                {
                    b.Navigation("tblUserGames");
                });
#pragma warning restore 612, 618
        }
    }
}
